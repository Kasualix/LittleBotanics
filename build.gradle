plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}


version = "1.${mod_version}-${mc_version}"
group = 'com.leobeliik.littlebotanics' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'littlebotanics'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: "2022.11.27-1.19.2"
    runs {
        client {

            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            //property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                littlebotanics {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            //property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                littlebotanics {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'littlebotanics', '--all', '--output', "\"" + file("src/generated/resources").toString() + "\"", "--validate", "--existing", "\"" + sourceSets.main.resources.srcDirs[0] + "\""

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                littlebotanics {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://maven.blamejared.com' } //Botania & Patchi
    maven { url 'https://maven.edtoaster.ca' } //LittleLogistics
    maven { url = "https://maven.theillusivec4.top/" } //Curios
    maven { url "https://dvs1.progwml6.com/files/maven/" } //JEI
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    compileOnly fg.deobf("vazkii.botania:Botania:${botania_version}:api")
    implementation fg.deobf("vazkii.botania:Botania:${botania_version}")
    implementation fg.deobf("dev.murad.littlelogistics:littlelogistics:${rootProject.ll_version}")
    implementation fg.deobf("vazkii.patchouli:Patchouli:${patchi_version}")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "littlebotanics",
                "Specification-Vendor"    : "LeoBeliik",
                "Specification-Version"   : project.jar.archiveVersion, // We are version 1 of ourselves
                "Implementation-Title"    : "Little botanics",
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "LeoBeliik",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
